{"version":3,"sources":["img/logo.png","components/ui/Header.js","components/characters/CharacterItem.js","img/spinner.gif","components/ui/Spinner.js","components/characters/CharacterGrid.js","components/ui/Search.js","components/Phrase.jsx","components/characters/CharacterQuotes.js","components/ui/Card.js","App.js","index.js"],"names":["Header","className","src","logo","alt","CharacterItem","item","div","whileHover","scale","whileTap","animate","transition","duration","img","name","portrayed","nickname","birthday","status","Spinner","spinner","style","width","margin","display","CharacterGrid","items","isLoading","map","char_id","Search","getQuery","useState","text","setText","type","placeholder","value","onChange","e","q","target","autoFocus","styled","button","Card","setPhrase","quote","setquote","quoteauthor","setquoteauthor","setItems","useEffect","a","axios","response","data","author","console","log","getPhrase","result","fetchImg","class","App","setIsLoading","query","setQuery","fetchItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45aae8a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import React from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"center\">\r\n      <img src={logo} alt=\"\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\n\r\nconst CharacterItem = ({ item }) => {\r\n  return (\r\n    <motion.div\r\n      className=\"card\"\r\n      whileHover={{ scale: 1.3 }}\r\n      whileTap={{ scale: 0.9 }}\r\n      animate={{ scale: 1 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <div className=\"card-inner\">\r\n        <div className=\"card-front\">\r\n          <img src={item.img} alt=\"\" />\r\n        </div>\r\n        <div className=\"card-back\">\r\n          <h1>{item.name}</h1>\r\n          <ul>\r\n            <li>\r\n              <strong>Actor Name:</strong> {item.portrayed}\r\n            </li>\r\n            <li>\r\n              <strong>Nickname:</strong> {item.nickname}\r\n            </li>\r\n            <li>\r\n              <strong>Birthday:</strong> {item.birthday}\r\n            </li>\r\n            <li>\r\n              <strong>Status:</strong> {item.status}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default CharacterItem;\r\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from \"react\";\r\nimport spinner from \"../../img/spinner.gif\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <img\r\n      src={spinner}\r\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n      alt=\"Loading\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport CharacterItem from \"./CharacterItem\";\r\nimport Spinner from \"../ui/Spinner\";\r\n\r\nconst CharacterGrid = ({ items, isLoading }) => {\r\n  return isLoading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <section className=\"cards\">\r\n      {items.map((item) => (\r\n        <CharacterItem key={item.char_id} item={item}></CharacterItem>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterGrid;\r\n","import { getSuggestedQuery } from \"@testing-library/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Search = ({ getQuery }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const onChange = (q) => {\r\n    setText(q);\r\n    getQuery(q);\r\n  };\r\n\r\n  return (\r\n    <section className=\"search\">\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search characters\"\r\n          value={text}\r\n          onChange={(e) => onChange(e.target.value)}\r\n          autoFocus\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  padding: 3rem;\n  border-radius: 0.5rem;\n  background-color: #fff;\n  max-width: 100%;\n  height: auto;\n\n  @media (min-width: 992px) {\n    margin-bottom: 1rem;\n  }\n  h1 {\n    font-family: Arial, Helvetica, sans-serif;\n    text-align: center;\n    color: #000;\n    position: relative;\n    padding-left: 4rem;\n    &::before {\n      content: open-quote;\n      font-size: 10rem;\n\n      color: #000;\n      position: absolute;\n      left: -1rem;\n      top: -2rem;\n    }\n  }\n  p {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 1.4rem;\n    font-weight: bold;\n\n    text-align: right;\n    color: #666;\n    margin-top: 2rem;\n  }\n`;\n\nconst Phrase = ({ phrase }) => {\n  return (\n    <>\n      <Container>\n        <h1>{phrase.quote}</h1>\n        <p>--{phrase.author}</p>\n      </Container>\n    </>\n  );\n};\n\nexport default Phrase;\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Phrase from \"../Phrase\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 5rem;\r\n  margin: 10px;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: -webkit-linear-gradient(\r\n    top left,\r\n    #093009 10%,\r\n    #0d3e10 40%,\r\n    #0f574e 100%\r\n  );\r\n  background-size: 200px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  color: #fff;\r\n  margin-top: 30px;\r\n  margin-bottom: 10px;\r\n  border-radius: 0.5rem;\r\n  padding: 0.5rem;\r\n  font-size: 2rem;\r\n  border: none;\r\n  transition: background-size 0.8s ease;\r\n  :hover {\r\n    cursor: pointer;\r\n    background-size: 400px;\r\n  }\r\n`;\r\n\r\nfunction CharacterQuotes() {\r\n  const [phrase, setPhrase] = useState({});\r\n  const getPhrase = async () => {\r\n    const response = await fetch(\r\n      `https://breaking-bad-quotes.herokuapp.com/v1/quotes`\r\n    ).then((res) => res.json());\r\n    setPhrase(response[0]);\r\n  };\r\n  useEffect(() => {\r\n    getPhrase();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Phrase phrase={phrase} />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterQuotes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Card.css\";\r\nimport logo from \"../../img/logo.png\";\r\nimport axios from \"axios\";\r\nfunction Card() {\r\n  const [imgurl, setImgurl] = useState([]);\r\n  const [phrase, setPhrase] = useState([]);\r\n  const [quote, setquote] = useState([]);\r\n  const [quoteauthor, setquoteauthor] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getPhrase = async () => {\r\n      const response = await axios(\r\n        `https://breaking-bad-quotes.herokuapp.com/v1/quotes`\r\n      );\r\n      setquote(response.data[0].quote);\r\n      setquoteauthor(response.data[0].author);\r\n      setPhrase(response.data[0]);\r\n      console.log(response.data[0].author);\r\n    };\r\n    getPhrase();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchImg = async () => {\r\n      const result = await axios(\r\n        `https://www.breakingbadapi.com/api/characters?name=${quoteauthor}`\r\n      );\r\n\r\n      setItems(result.data[0]);\r\n    };\r\n    fetchImg();\r\n  }, [items]);\r\n\r\n  return (\r\n    <div class=\"car\">\r\n      <img className=\"quotesimg\" src={items.img} alt=\"Avatar\" />\r\n      <div class=\"container\">\r\n        <h4>\r\n          <b className=\"quote\">{quote}</b>\r\n        </h4>\r\n        <p className=\"author\">--{quoteauthor}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Header from \"./components/ui/Header\";\nimport CharacterGrid from \"./components/characters/CharacterGrid\";\nimport Search from \"./components/ui/Search\";\nimport CharacterQuotes from \"./components/characters/CharacterQuotes\";\nimport Card from \"./components/ui/Card\";\n\nconst App = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      setIsLoading(true);\n      const result = await axios(\n        `https://www.breakingbadapi.com/api/characters?name=${query}`\n      );\n\n      //console.log(result.data);\n      setItems(result.data);\n      setIsLoading(false);\n    };\n    fetchItems();\n  }, [query]);\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Card />\n\n      <Search getQuery={(q) => setQuery(q)} />\n      <CharacterGrid isLoading={isLoading} items={items} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}