{"version":3,"sources":["img/logo.png","components/ui/Header.js","components/characters/CharacterItem.js","img/spinner.gif","components/ui/Spinner.js","components/characters/CharacterGrid.js","components/ui/Search.js","App.js","index.js"],"names":["Header","className","src","logo","alt","CharacterItem","item","div","whileHover","scale","whileTap","animate","transition","duration","img","name","portrayed","nickname","birthday","status","Spinner","spinner","style","width","margin","display","CharacterGrid","items","isLoading","map","char_id","Search","getQuery","useState","text","setText","type","placeholder","value","onChange","e","q","target","autoFocus","App","setItems","setIsLoading","query","setQuery","useEffect","a","axios","result","console","log","data","fetchItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAe,MAA0B,iCCW1BA,EARA,WACb,OACE,wBAAQC,UAAU,SAAlB,SACE,qBAAKC,IAAKC,EAAMC,IAAI,Q,SCgCXC,EAnCO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,cAAC,IAAOC,IAAR,CACEN,UAAU,OACVO,WAAY,CAAEC,MAAO,KACrBC,SAAU,CAAED,MAAO,IACnBE,QAAS,CAAEF,MAAO,GAClBG,WAAY,CAAEC,SAAU,IAL1B,SAOE,sBAAKZ,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKC,IAAKI,EAAKQ,IAAKV,IAAI,OAE1B,sBAAKH,UAAU,YAAf,UACE,6BAAKK,EAAKS,OACV,+BACE,+BACE,iDADF,IACgCT,EAAKU,aAErC,+BACE,+CADF,IAC8BV,EAAKW,YAEnC,+BACE,+CADF,IAC8BX,EAAKY,YAEnC,+BACE,6CADF,IAC4BZ,EAAKa,sBC7B9B,MAA0B,oCCa1BC,EAVC,WACd,OACE,qBACElB,IAAKmB,EACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,SAClDrB,IAAI,aCQKsB,EAZO,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MACvB,OAD8C,EAAhBC,UAE5B,cAAC,EAAD,IAEA,yBAAS3B,UAAU,QAAnB,SACG0B,EAAME,KAAI,SAACvB,GAAD,OACT,cAAC,EAAD,CAAkCA,KAAMA,GAApBA,EAAKwB,eCgBlBC,G,OAvBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACPC,mBAAS,IADF,mBACxBC,EADwB,KAClBC,EADkB,KAO/B,OACE,yBAASlC,UAAU,SAAnB,SACE,+BACE,uBACEmC,KAAK,OACLnC,UAAU,eACVoC,YAAY,oBACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAbAC,EAagBD,EAAEE,OAAOJ,MAZzCH,EAAQM,QACRT,EAASS,GAFM,IAACA,GAcVE,WAAS,UCgBJC,EA5BH,WAAO,IAAD,EACUX,mBAAS,IADnB,mBACTN,EADS,KACFkB,EADE,OAEkBZ,oBAAS,GAF3B,mBAETL,EAFS,KAEEkB,EAFF,OAGUb,mBAAS,IAHnB,mBAGTc,EAHS,KAGFC,EAHE,KAmBhB,OAdAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,6DACjBJ,GAAa,GADI,SAEIK,IAAM,sDAAD,OAC8BJ,IAHvC,OAEXK,EAFW,OAMjBC,QAAQC,IAAIF,EAAOG,MACnBV,EAASO,EAAOG,MAChBT,GAAa,GARI,2CAAH,qDAUhBU,KACC,CAACT,IAGF,sBAAK9C,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQ+B,SAAU,SAACS,GAAD,OAAOO,EAASP,MAClC,cAAC,EAAD,CAAeb,UAAWA,EAAWD,MAAOA,QCzBlD8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ade125ec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import React from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"center\">\r\n      <img src={logo} alt=\"\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\n\r\nconst CharacterItem = ({ item }) => {\r\n  return (\r\n    <motion.div\r\n      className=\"card\"\r\n      whileHover={{ scale: 1.3 }}\r\n      whileTap={{ scale: 0.9 }}\r\n      animate={{ scale: 1 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <div className=\"card-inner\">\r\n        <div className=\"card-front\">\r\n          <img src={item.img} alt=\"\" />\r\n        </div>\r\n        <div className=\"card-back\">\r\n          <h1>{item.name}</h1>\r\n          <ul>\r\n            <li>\r\n              <strong>Actor Name:</strong> {item.portrayed}\r\n            </li>\r\n            <li>\r\n              <strong>Nickname:</strong> {item.nickname}\r\n            </li>\r\n            <li>\r\n              <strong>Birthday:</strong> {item.birthday}\r\n            </li>\r\n            <li>\r\n              <strong>Status:</strong> {item.status}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default CharacterItem;\r\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from \"react\";\r\nimport spinner from \"../../img/spinner.gif\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <img\r\n      src={spinner}\r\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n      alt=\"Loading\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport CharacterItem from \"./CharacterItem\";\r\nimport Spinner from \"../ui/Spinner\";\r\n\r\nconst CharacterGrid = ({ items, isLoading }) => {\r\n  return isLoading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <section className=\"cards\">\r\n      {items.map((item) => (\r\n        <CharacterItem key={item.char_id} item={item}></CharacterItem>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterGrid;\r\n","import { getSuggestedQuery } from \"@testing-library/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Search = ({ getQuery }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const onChange = (q) => {\r\n    setText(q);\r\n    getQuery(q);\r\n  };\r\n\r\n  return (\r\n    <section className=\"search\">\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search characters\"\r\n          value={text}\r\n          onChange={(e) => onChange(e.target.value)}\r\n          autoFocus\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Header from \"./components/ui/Header\";\nimport CharacterGrid from \"./components/characters/CharacterGrid\";\nimport Search from \"./components/ui/Search\";\n\nconst App = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      setIsLoading(true);\n      const result = await axios(\n        `https://www.breakingbadapi.com/api/characters?name=${query}`\n      );\n\n      console.log(result.data);\n      setItems(result.data);\n      setIsLoading(false);\n    };\n    fetchItems();\n  }, [query]);\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Search getQuery={(q) => setQuery(q)} />\n      <CharacterGrid isLoading={isLoading} items={items} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}